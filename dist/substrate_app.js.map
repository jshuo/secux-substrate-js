{"version":3,"file":"substrate_app.js","sourceRoot":"","sources":["../src/substrate_app.ts"],"names":[],"mappings":"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","sourcesContent":["/** ******************************************************************************\n *  (c) 2019 - 2022 ZondaX AG\n *  (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ******************************************************************************* */\nimport { buildPathBuffer } from '@secux/utility'\nimport { ITransport } from '@secux/transport';\nimport {\n  CHUNK_SIZE,\n  getVersion,\n  processErrorResponse,\n  ResponseVersion,\n  SCHEME,\n} from './common'\n\n\nfunction buildTxBuffer(paths: Array<string>, txs: Buffer) {\n  const head = [],\n    data = []\n  for (let i = 0; i < paths.length; i++) {\n    const headerBuffer = Buffer.alloc(4)\n    headerBuffer.writeUInt16LE(0, 0)\n    headerBuffer.writeUInt16LE(0, 2)\n\n    const path = paths[i]\n    const { pathNum, pathBuffer } = buildPathBuffer(path)\n    // generic prepare can use 3 or 5 path level key to sign\n    if (pathNum !== 5 && pathNum !== 3) throw Error('Invalid Path for Signing Transaction')\n\n    head.push(Buffer.concat([Buffer.from([pathNum * 4 + 4]), headerBuffer, pathBuffer]))\n  }\n  // fixed 2 byte length\n  const preparedTxLenBuf = Buffer.alloc(2)\n  preparedTxLenBuf.writeUInt16BE(txs.length, 0)\n  data.push(Buffer.concat([preparedTxLenBuf, txs]))\n  return Buffer.concat([Buffer.from([paths.length]), ...head, ...data])\n}\n\nexport class SubstrateApp {\n  transport: ITransport\n  cla: number\n  slip0044: number\n\n  constructor(transport: ITransport, cla: number, slip0044: number) {\n    if (!transport) {\n      throw new Error('Transport has not been defined')\n    }\n    this.transport = transport\n    this.cla = cla\n    this.slip0044 = slip0044\n  }\n\n  static serializePath(slip0044: number, account: number, change: number, addressIndex: number) {\n    if (!Number.isInteger(account)) throw new Error('Input must be an integer')\n    if (!Number.isInteger(change)) throw new Error('Input must be an integer')\n    if (!Number.isInteger(addressIndex)) throw new Error('Input must be an integer')\n\n    const buf = Buffer.alloc(20)\n    buf.writeUInt32LE(0x8000002c, 0)\n    buf.writeUInt32LE(slip0044, 4)\n    buf.writeUInt32LE(account, 8)\n    buf.writeUInt32LE(change, 12)\n    buf.writeUInt32LE(addressIndex, 16)\n    return buf\n  }\n\n\n  async getVersion(): Promise<ResponseVersion> {\n    try {\n      return await getVersion(this.transport, this.cla)\n    } catch (e) {\n      return processErrorResponse(e)\n    }\n  }\n\n  async appInfo() {  }\n\n  async getAddress(\n    account: number,\n    change: number,\n    addressIndex: number,\n    requireConfirmation = false,\n    scheme = SCHEME.ED25519,\n  ){\n    const bip44Path = SubstrateApp.serializePath(this.slip0044, account, change, addressIndex)\n    const rsp = await this.transport.Send(0x70, 0xa7, 0, 0, Buffer.concat([bip44Path]))\n    const address = null, pubKey  = null\n    return { address, pubKey }\n  }\n\n  async sign(account: number, change: number, addressIndex: number, message: Buffer, scheme = SCHEME.ED25519) {\n    const bip44Path = SubstrateApp.serializePath(this.slip0044, account, change, addressIndex)\n    const rsp = await this.transport.Send(0x70, 0xa7, 0, 0, Buffer.concat([bip44Path]))\n    const signature = null\n    return {signature}\n  }\n\n}\n"]}